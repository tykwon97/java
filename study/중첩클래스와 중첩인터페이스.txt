<java>

중첩클래스란 클래스 내부에 선언한 클래스를 말하는데, 중첩 클래스를 사용하면 두 클래스의 멤버들을 서로 쉽게 접근 할 수 있다는 장점과 외부에는 불필요한 관계 클래스를 감춤으로써 코드의 복잡성을 줄일 수 있다.

인터페이스를 클래스 내부에 선언하는 이유 - 해당 클래스와 긴밀한 관꼐를 맺는 구현 클래스를 만들기 위해

-> 중첩 인터페이스는 주로 UI프로그래밍에서 이벤크를 처리할 목적으로 많이 활용

중첩 클래스는 메소드 내에서도 선언할 수 있다. 이것을 로컬 클래스라고 한다. 로컬 클래스는 접근 제한자(public, private)및 static을 붙일 수 없다. 로컬 클래스는 메소드 내부에서만 사용되므로 접근을 제한할 필요가 없기 때문이다. 로컬 클래스 내부에는 인스턴스 필드와 메스드만 선언이 가능하고 정적 필드와 메소드는 선언할 수 없다.

로컬 클래스에서 사용된 매개 변수와 로컬 변수는 모두 final 특성을 갖는다.

중첩 클래스 내부에서 바깐 클래스의 객체 참조를 얻으려면 바깥 클래스의 이름을 this 앞에 붙여주면 된다.

UI프로그래밍에서 이벤트를 처리할 목적으로 인터페이스를 클래스 내부에 선언한다.
-> 해당클래스와 긴밀한 관계를 맺는 구현 클래스를 만들기 위해서

익명 객체
-> 이름이 없는 객체, 단독으로 생성x, 클래스를 상속하거나 인터페이스를 구현해야만 생성할 수 있다.
-> 필드의 초기값이나 로컬변수의 초기값, 매개 변수의 매개값으로 주로 대입된다.
-> UI 이벤트 처리 객체나 스레드 객체를 간편하게 생성할 목적으로 익명 객체가 많이 활용

<Final 변수>
->원시 타입 : 로컬 원시 변수에 final로 선언하면 한번 초기화된 변수는 변경할 수 없는 상수값이 됩니다. 
->객체 타입 : 객체 변수에 final로 선언하면 그 변수에 다른 참조 값을 지정할 수 없습니다. 원시 타입과 동일하게 한번 쓰여진 변수는 재변경 불가합니다. 단, 객체 자체가 immutable하다는 의미는 아닙니다. 객체의 속성은 변경 가능합니다. 
->메서드 인자 : 메서드 인자에 final 키워드를 붙이면, 메서드 안에서 변수값을 변경할 수 없습니다. 
->맴버 변수 : 래스의 맴버 변수에 final로 선언하면 상수값이 되거나 write-once 필드로 한 번만 쓰이게 됩니다. final로 선언하면 초기화되는 시점은 생성자 메서드가 끝나기 전에 초기화가 됩니다. 하지만, static이냐 아니냐에 따라서도 초기화 시점이 달라집니다.
